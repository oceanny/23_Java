package com.java.collection;

import java.util.ArrayList;
import java.util.List;

public class ArrayListTest {

	public static void main(String[] args) {
		
//		* 리스트 컬렉션 *
//		레퍼런스를 조상 클래스로 잡지 않고 인터페이스로 잡아도 됨
//		조상 클래스가 레퍼런스 : 형태 중심
//		인터페이스가 레퍼런스 : 기능 중심\
//		클래스로 레퍼런스 : AbstractList list = new ArrayList(); -> 목적 불분명해짐

//		타입 지정 없이 리스트 생성
//		List list = new ArrayList();
		List<Integer> list = new ArrayList<Integer>();
		
		list.add(1);		// int
//		list.add("123");	// String
//		list.add('A');		// char
//		list.add(true);		//boolean
		list.add(1);
		
		System.out.println(list);
//		System.out.println(list.get(2));
//		System.out.println(list.contains('A'));
		System.out.println(list.indexOf(1));	//indexOf는 중복값 중 가장 앞의 값의 인덱스를 출력
		
//		list.remove("123");	// 중복되는 123을 모두 지움
		list.remove(1);		// 인덱스 1을 지움 -> 인덱스로 지우는게 안전
		
//		숫자 1을 인덱스를 이용하지 않고 지우는 방법
		List<Integer> delete = new ArrayList<Integer>();
		delete.add(1);
		
		list.removeAll(delete);
		System.out.println(list);
		
//		list에 다른 list 넣기
		List<Integer> addList = new ArrayList<Integer>();
		addList.add(1);
		addList.add(2);
		addList.add(3);
		addList.add(4);
		addList.add(5);
		
		list.addAll(addList);
		System.out.println(list);
		
//		addList 목록에 없는 변수 다 제거
		list.retainAll(addList);
		System.out.println(list);
		
//		인덱스 번호를 기준으로 값을 바꾸는 코드
		list.set(3, 8);
		System.out.println(list);
		
//		list의 크기를 가져오는 메소드 (길이X)
		System.out.println(list.size());
		
	}

}
